% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kSymmetryWrapperNN.R
\name{kSymNN}
\alias{kSymNN}
\title{Wrapper for xegaRun for k-symmetry NN experiments.}
\usage{
kSymNN(
  expReplay = 0,
  treatmentname = "t0",
  experimentname = "e0",
  replay = 0,
  k = 2,
  topology = c(2, 3, 1),
  trials = 1,
  tVerbose = 1,
  algorithm = "sga",
  popsize = 200,
  generations = 5e+05,
  initgene = "InitGene",
  selection = "SUS",
  mateselection = "SUS",
  replication = "Kid2",
  crossover = "Cross2Gene",
  mutation = "MutateGene",
  accept = "All",
  reportEvalErrors = "FALSE",
  crossrate = 0.2,
  mutrate = 0.4,
  ivmutrate = "Const",
  mutrate2 = 0.8,
  ivcrossrate = "Const",
  crossrate2 = 0.4,
  scalefactor = "Uniform",
  executionModel = "Sequential",
  verbose = 0,
  outpath = ".",
  early = TRUE,
  semantics = "byValue",
  batch = FALSE,
  everyk = 10
)
}
\arguments{
\item{expReplay}{Integer. If \code{expReplay>0}, 
then use \code{expReplay} 
as the seed of the random number generator and  
store it for the exact repetition of this experiment.
Default: 0.}

\item{treatmentname}{Default: "t0".}

\item{experimentname}{Default: "e0".}

\item{replay}{Default: 0.}

\item{k}{Defautl: 2.}

\item{topology}{Defautl: \code{c(2, 3, 1)}.}

\item{trials}{Default: 1.}

\item{tVerbose}{Default: 1.}

\item{algorithm}{Default: "sga".}

\item{popsize}{Default: 200.}

\item{generations}{Default: 500000.}

\item{initgene}{Default: "InitGene".}

\item{selection}{Default: "SUS".}

\item{mateselection}{Default: "SUS".}

\item{replication}{Default: "Kid2".}

\item{crossover}{Default: "Cross2Gene".}

\item{mutation}{Default: "MutateGene".}

\item{accept}{Default: "All".}

\item{reportEvalErrors, }{Default: "FALSE".}

\item{crossrate}{Default: 0.2.}

\item{mutrate}{Default: 0.4.}

\item{ivmutrate}{Default: "Const".}

\item{mutrate2}{Default: 0.4.}

\item{ivcrossrate}{Default: "Const".}

\item{crossrate2}{Default: 0.2.}

\item{scalefactor}{Default: "Uniform".}

\item{executionModel}{Default: "Sequential",}

\item{verbose}{Default: 0.}

\item{outpath}{Default: ".".}

\item{early}{Early termination. Default: TRUE.}

\item{semantics}{Default: "byValue".}

\item{batch}{Default: FALSE.}

\item{everyk}{Integer. Save results after every k trials. 
Default:10.}
}
\value{
A named list with the following elements
  \itemize{
  \item \code{$lastGAResult}: The return object of \code{xegaRun()}.
  \item \code{$resultDF}: A dataframe with the following columns:
  \itemize{
    \item \code{$Fit}: The best fitness value of a trial.
    \item \code{$Solution}: The best solution (the phenotype of the gene).
    \item \code{$Seconds}:  Execution time of the trial in seconds. 
    \item \code{$Generations}: The number of generations until termination.
    \item \code{$Evaluations}: The number of fitness evaluations.   
    }
    \item \code{$tArgs}:    The arguments for the treatment.
    \item \code{$xegaArgs}: The arguments passed to xega.
    \item \code{$filename}: The name of the last file written.
    }
}
\description{
Tentative. Restricts the parameter space of xegaRun. 
             Not yet flexible at all.
}
\details{
Repeats xegaRun several times. 
        \itemize{
         \item
         As a side effect writes files with the experimental data
         into the directory \code{outpath} which must exist.
         \item
         The treatmentname may not contain numbers, because
         the files generated \code{everyk} trials have serial 
         numbers with 3 decimal places at the end. 
         }
}
\examples{
tmpPath<-tempdir()
r1<-kSymNN(treatmentname="t0", experimentname="e0", 
      k=2, topology=c(2, 3, 1), trials=1, 
      algorithm="sga", popsize=20, 
      generations= 100, crossrate=0.2, mutrate=0.4, 
      ivmutrate="Const", mutrate2=0.4,
      ivcrossrate="Const", crossrate2=0.2,
      executionModel="Sequential", verbose=1, 
      outpath=tmpPath, semantics="byValue")
r1$lastGAResult$GAenv$penv$errorTable(r1$lastGAResult$solution$phenotype)
r2<-kSymNN(treatmentname="t1", experimentname="e0", 
      k=3, topology=c(3, 6, 3, 1), trials=1, 
      algorithm="sgde", popsize=100, 
      generations= 200, crossrate=0.2, mutrate=0.4, 
      ivmutrate="Const", mutrate2=0.4,
      ivcrossrate="Const", crossrate2=0.2,
      mutation="MutateGeneDE", scalefactor="Uniform", 
      crossover="UCrossGene", replication="DE",
      selection="UniformP", mateselection="UniformP", accept="Best",
      executionModel="Sequential", verbose=1, 
      outpath=tmpPath, semantics="byValue")
p<-r2$lastGAResult$GAenv$penv
s<-r2$lastGAResult$solution$phenotype
cbind((p$kSymmetryTable(p$k())[,1:3]), p$errorTable(s))

}
\seealso{
Other Experiment: 
\code{\link{kSym}()},
\code{\link{treatmentRun}()}
}
\concept{Experiment}
